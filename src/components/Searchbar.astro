---
import { pattern } from '../utils/validateUrl';
import Clipboard from './icons/Clipboard.astro';
import Cross from './icons/Cross.astro';

interface Props {
    error: string;
}

const { error } = Astro.props;
---

<form role="search" data-search-form>
    <label class="url-input-label" for="searchbar">Put a Spotify song URL here</label>
    <div class="search-group">
        <div class="input-group">
            <input
                type="text"
                autocomplete="off"
                placeholder="https://open.spotify.com/track/..."
                class="url-input"
                name="url"
                id="searchbar"
                pattern={pattern.source}
                required
                data-search-textbox
            />
            <button type="reset" class="round-button input-button clear-button" data-search-clear>
                <span class="sr-only">Clear</span>
                <Cross />
            </button>
            <button type="button" class="round-button input-button paste-button" data-search-paste>
                <span class="sr-only">Paste from clipboard</span>
                <Clipboard />
            </button>
        </div>
        <button type="submit" class="search-button" data-search-button>
            <span class="sr-only">Search</span>
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" class="not-loading">
                <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    d="m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z"></path>
            </svg>
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" class="loading">
                <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    d="M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0 3.181 3.183a8.25 8.25 0 0 0 13.803-3.7M4.031 9.865a8.25 8.25 0 0 1 13.803-3.7l3.181 3.182m0-4.991v4.99"
                ></path>
            </svg>
        </button>
    </div>
    <div class="url-input-label" data-search-error role="status">
        {error}
    </div>
</form>

<script>
    document.querySelector('[data-search-textbox]')?.addEventListener('input', () => {
        document.querySelector('[data-search-error]')!.innerHTML = '';
    });

    const pasteButton = document.querySelector('[data-search-paste]');
    if (pasteButton) {
        if (navigator.clipboard.readText) {
            pasteButton.addEventListener('click', () => {
                navigator.clipboard
                    .readText()
                    .then(
                        (text) =>
                            ((document.querySelector('[data-search-textbox]') as HTMLInputElement).value =
                                text)
                    );
            });
        } else {
            pasteButton.remove();
        }
    }
</script>

<style>
    form {
        width: 100%;
    }

    .search-group {
        height: 4rem;
        display: flex;
        align-items: center;
        justify-content: center;
        width: 100%;
    }

    .input-group {
        flex: 1;
        width: 800px;
        height: 100%;
        position: relative;
        display: flex;
        place-items: center;
    }

    .url-input {
        background-color: #333;
        color: #fff;
        font-size: 1rem;
        font-weight: 500;
        padding: 0 48px 0 16px;
        width: 100%;
        height: 100%;
        border-radius: 9999px;
        border: none;
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
    }

    .url-input:disabled {
        color: #aaa;
    }

    .url-input:placeholder-shown + .clear-button {
        display: none;
    }

    .url-input:not(:placeholder-shown) + .clear-button + .paste-button {
        display: none;
    }

    .input-button {
        position: absolute;
        right: 0.5rem;
    }

    .url-input-label {
        font-size: 1rem;
        font-weight: 600;
        padding: 0 16px;
    }

    .search-button {
        aspect-ratio: 1/1;
        background-color: #1ed760;
        color: black;
        padding-right: 0.5rem;
        height: 100%;
        border-radius: 9999px;
        border: none;
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
    }

    .search-button:hover,
    .search-button:focus {
        background-color: #1cb852;
        cursor: pointer;
    }

    @keyframes spin {
        from {
            transform: rotate(0deg);
        }
        to {
            transform: rotate(360deg);
        }
    }

    .search-button[aria-busy='true'] > .loading {
        animation: spin 2s linear infinite;
        display: inline;
    }

    .search-button > .loading {
        display: none;
    }

    .search-button[aria-busy='true'] > .not-loading {
        display: none;
    }

    .search-button > svg {
        width: 2rem;
        height: 2rem;
    }
</style>
