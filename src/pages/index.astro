---
import Layout from '../layouts/Layout.astro';
import SongCard from '../components/SongCard.astro';
import AboutLink from '../components/AboutLink.astro';
import Searchbar from '../components/Searchbar.astro';
import { getSongData } from '../utils/getSongData';
import { getFullTitle } from '../utils/getFullTitle';

let title = 'No title';
let artist = 'No artist';
let fullTitle = null;
let cover = null;
let error = '';
let color: string | null = null;

const url = Astro.url.searchParams.get('url');
if (url) {
    try {
        const result = await getSongData(url);
        title = result.title;
        artist = result.artist;
        cover = result.cover;
        color = result.color;
        fullTitle = getFullTitle(title, artist);
    } catch (err) {
        if (!(err instanceof Error)) {
            return;
        }
        error = err.message;
    }
}
---

<Layout song={fullTitle} color={color}>
    <main>
        <Searchbar error={error} />
        <SongCard cover={cover} title={title} artist={artist} copyString={getFullTitle(title, artist)} />
    </main>
    <AboutLink />
</Layout>

<script>
    import { validateUrl } from '../utils/validateUrl';
    import { getFullTitle } from '../utils/getFullTitle';
    import { websiteTitle } from '../utils/websiteTitle';

    const handler = async (event: Event) => {
        const searchButton = document.querySelector('[data-search-button]') as HTMLButtonElement;
        const errorField = document.querySelector('[data-search-error]') as HTMLElement;
        const searchField = document.querySelector('[data-search-textbox]') as HTMLInputElement;
        const copyButton = document.querySelector('[data-copy-button]');

        if (!(event instanceof SubmitEvent)) return;
        const target = event.target;
        if (!(target instanceof HTMLFormElement)) return;
        const formData = new FormData(target);
        const url = formData.get('url');
        if (!validateUrl(url)) {
            errorField.innerHTML = 'Invalid URL';
            return;
        }

        window.history.pushState({}, '', `?url=${url}`);

        searchButton.disabled = true;
        searchButton.ariaBusy = 'true';
        searchField.disabled = true;

        const result = await fetch(`/getSong?url=${encodeURI(url as string)}`);

        searchButton.disabled = false;
        searchButton.ariaBusy = null;
        searchField.disabled = false;

        if (!result.ok) {
            errorField.innerHTML = await result.text();
            return;
        }
        const songData = await result.json();

        document.querySelector('[data-song-title]')!.innerHTML = songData.title;
        document.querySelector('[data-song-artist]')!.innerHTML = songData.artist;
        (document.querySelector('[data-song-cover]') as HTMLImageElement).src = songData.cover;
        const fullTitle = getFullTitle(songData.title, songData.artist);
        copyButton?.setAttribute('data-copy-button', fullTitle);
        document.title = `${fullTitle} | ${websiteTitle}`;
        document.body.style.setProperty('--cover-color', songData.color);
    };

    document.querySelector('[data-search-form]')?.addEventListener('submit', (event) => {
        event.preventDefault();
        handler(event);
    });
</script>

<style>
    main {
        display: flex;
        flex-direction: column;
        place-items: center;
        justify-content: center;
        width: 100%;
        max-width: min(100vw, 800px);
        height: 100%;
        gap: 16px;
        padding: 16px;
    }
</style>
